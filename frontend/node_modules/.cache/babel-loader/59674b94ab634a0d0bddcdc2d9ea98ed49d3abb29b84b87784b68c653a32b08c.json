{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    product: [],\n    fav: []\n  },\n  reducers: {\n    addtocart: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      const itemInCart = state.product.find(item => item.id === payload.id);\n      if (itemInCart) {\n        itemInCart.quantity++;\n      } else {\n        state.product.push({\n          ...payload,\n          quantity: 1\n        });\n      }\n    },\n    remove: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      const removeItem = state.product.filter(item => item.id !== payload.id);\n      state.product = removeItem;\n    },\n    incrementQuantity: (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      const item = state.product.find(item => item.id === payload.id);\n      item.quantity++;\n    },\n    decrementQuantity: (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      const item = state.product.find(item => item.id === payload.id);\n      if (item.quantity === 1) {\n        item.quantity = 1;\n      } else {\n        item.quantity--;\n      }\n    },\n    gettotal: state => {\n      let total = 0;\n      state.product.forEach(item => {\n        total = total + item.quantity * item.price;\n      });\n      state.total = total;\n    },\n    addtofav: (state, _ref5) => {\n      let {\n        payload\n      } = _ref5;\n      state.fav.push({\n        ...payload\n      });\n    }\n  }\n});\nexport const {\n  addtocart,\n  remove,\n  incrementQuantity,\n  decrementQuantity,\n  gettotal,\n  addtofav\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","product","fav","reducers","addtocart","state","payload","itemInCart","find","item","id","quantity","push","remove","removeItem","filter","incrementQuantity","decrementQuantity","gettotal","total","forEach","price","addtofav","actions","reducer"],"sources":["D:/arun/web development/Project/pro/src/reducers/cartreducer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const cartSlice = createSlice({\r\n\r\n  name: 'cart',\r\n  initialState: {\r\n\r\n    product: [],\r\n    fav: []\r\n\r\n\r\n  },\r\n  reducers: {\r\n    addtocart: (state, { payload }) => {\r\n      const itemInCart = state.product.find((item) => item.id === payload.id);\r\n\r\n      if (itemInCart) {\r\n        itemInCart.quantity++;\r\n      } else {\r\n        state.product.push({ ...payload, quantity: 1 });\r\n      }\r\n    },\r\n    remove: (state, { payload }) => {\r\n      const removeItem = state.product.filter((item) => item.id !== payload.id);\r\n      state.product = removeItem;\r\n    },\r\n    incrementQuantity: (state, { payload }) => {\r\n      const item = state.product.find((item) => item.id === payload.id);\r\n      item.quantity++;\r\n\r\n    },\r\n    decrementQuantity: (state, { payload }) => {\r\n      const item = state.product.find((item) => item.id === payload.id);\r\n      if (item.quantity === 1) {\r\n        item.quantity = 1\r\n      } else {\r\n        item.quantity--;\r\n      }\r\n    },\r\n    gettotal: (state) => {\r\n\r\n      let total = 0;\r\n\r\n      state.product.forEach((item) => {\r\n\r\n        total = total + item.quantity * item.price\r\n      })\r\n\r\n      state.total = total;\r\n    },\r\n    addtofav: (state,{payload}) => {\r\n     state.fav.push({...payload});\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n});\r\n\r\nexport const { addtocart, remove, incrementQuantity, decrementQuantity, gettotal,addtofav } = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAG9C,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAEnCE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IAEZC,OAAO,EAAE,EAAE;IACXC,GAAG,EAAE;EAGP,CAAC;EACDC,QAAQ,EAAE;IACRC,SAAS,EAAE,CAACC,KAAK,WAAkB;MAAA,IAAhB;QAAEC;MAAQ,CAAC;MAC5B,MAAMC,UAAU,GAAGF,KAAK,CAACJ,OAAO,CAACO,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;MAEvE,IAAIH,UAAU,EAAE;QACdA,UAAU,CAACI,QAAQ,EAAE;MACvB,CAAC,MAAM;QACLN,KAAK,CAACJ,OAAO,CAACW,IAAI,CAAC;UAAE,GAAGN,OAAO;UAAEK,QAAQ,EAAE;QAAE,CAAC,CAAC;MACjD;IACF,CAAC;IACDE,MAAM,EAAE,CAACR,KAAK,YAAkB;MAAA,IAAhB;QAAEC;MAAQ,CAAC;MACzB,MAAMQ,UAAU,GAAGT,KAAK,CAACJ,OAAO,CAACc,MAAM,CAAEN,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;MACzEL,KAAK,CAACJ,OAAO,GAAGa,UAAU;IAC5B,CAAC;IACDE,iBAAiB,EAAE,CAACX,KAAK,YAAkB;MAAA,IAAhB;QAAEC;MAAQ,CAAC;MACpC,MAAMG,IAAI,GAAGJ,KAAK,CAACJ,OAAO,CAACO,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;MACjED,IAAI,CAACE,QAAQ,EAAE;IAEjB,CAAC;IACDM,iBAAiB,EAAE,CAACZ,KAAK,YAAkB;MAAA,IAAhB;QAAEC;MAAQ,CAAC;MACpC,MAAMG,IAAI,GAAGJ,KAAK,CAACJ,OAAO,CAACO,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;MACjE,IAAID,IAAI,CAACE,QAAQ,KAAK,CAAC,EAAE;QACvBF,IAAI,CAACE,QAAQ,GAAG,CAAC;MACnB,CAAC,MAAM;QACLF,IAAI,CAACE,QAAQ,EAAE;MACjB;IACF,CAAC;IACDO,QAAQ,EAAGb,KAAK,IAAK;MAEnB,IAAIc,KAAK,GAAG,CAAC;MAEbd,KAAK,CAACJ,OAAO,CAACmB,OAAO,CAAEX,IAAI,IAAK;QAE9BU,KAAK,GAAGA,KAAK,GAAGV,IAAI,CAACE,QAAQ,GAAGF,IAAI,CAACY,KAAK;MAC5C,CAAC,CAAC;MAEFhB,KAAK,CAACc,KAAK,GAAGA,KAAK;IACrB,CAAC;IACDG,QAAQ,EAAE,CAACjB,KAAK,YAAe;MAAA,IAAd;QAACC;MAAO,CAAC;MACzBD,KAAK,CAACH,GAAG,CAACU,IAAI,CAAC;QAAC,GAAGN;MAAO,CAAC,CAAC;IAE7B;EAMF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEF,SAAS;EAAES,MAAM;EAAEG,iBAAiB;EAAEC,iBAAiB;EAAEC,QAAQ;EAACI;AAAS,CAAC,GAAGxB,SAAS,CAACyB,OAAO;AAE/G,eAAezB,SAAS,CAAC0B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}