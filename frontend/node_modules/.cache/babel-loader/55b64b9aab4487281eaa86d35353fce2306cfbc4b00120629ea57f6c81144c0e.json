{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    product: []\n  },\n  reducers: {\n    addtocart: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      const itemInCart = state.product.find(item => item.id === payload.id);\n      if (itemInCart) {\n        itemInCart.quantity++;\n      } else {\n        state.product.push({\n          ...payload,\n          quantity: 1,\n          total: 0\n        });\n      }\n    },\n    remove: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      const removeItem = state.product.filter(item => item.id !== payload.id);\n      state.product = removeItem;\n    },\n    incrementQuantity: (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      const item = state.product.find(item => item.id === payload.id);\n      item.quantity++;\n    },\n    decrementQuantity: (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      const item = state.product.find(item => item.id === payload.id);\n      if (item.quantity === 1) {\n        item.quantity = 1;\n      } else {\n        item.quantity--;\n      }\n    },\n    gettotal: (state, _ref5) => {\n      let {\n        payload\n      } = _ref5;\n      const item = state.product.find(item => item.id === payload.id);\n      item.reduce(function myFunc(total, num) {\n        return total + num.quantity * num.product.price;\n      });\n    }\n  }\n});\nexport const {\n  addtocart,\n  remove,\n  incrementQuantity,\n  decrementQuantity,\n  gettotal\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","product","reducers","addtocart","state","payload","itemInCart","find","item","id","quantity","push","total","remove","removeItem","filter","incrementQuantity","decrementQuantity","gettotal","reduce","myFunc","num","price","actions","reducer"],"sources":["D:/arun/visual studio code/Project/pro/src/reducers/cartreducer.js"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\r\n\r\nexport const cartSlice = createSlice( {\r\n    \r\n    name:'cart',\r\n    initialState : {\r\n   \r\n    product:[],\r\n  \r\n },\r\nreducers:{\r\n    addtocart:(state ,{payload})=>{\r\n      const itemInCart = state.product.find((item) => item.id === payload.id);\r\n      if (itemInCart) {\r\n        itemInCart.quantity++;\r\n      } else {\r\n        state.product.push({ ...payload, quantity: 1,total:0 });\r\n      }\r\n    },\r\n    remove:(state, {payload})=> {\r\n      const removeItem = state.product.filter((item) => item.id !== payload.id);\r\n      state.product = removeItem;\r\n      },\r\n      incrementQuantity: (state,{payload} ) => {\r\n        const item = state.product.find((item) => item.id === payload.id);\r\n        item.quantity++;\r\n       \r\n      },\r\n      decrementQuantity: (state, {payload}) => {\r\n        const item = state.product.find((item) => item.id === payload.id);\r\n        if (item.quantity === 1) {\r\n          item.quantity = 1\r\n        } else {\r\n          item.quantity--;\r\n        }\r\n      },\r\n      gettotal:(state,{payload}) => {\r\n        const item = state.product.find((item) => item.id === payload.id);\r\n         item.reduce(function myFunc(total, num) {\r\n          return  total + (num.quantity*num.product.price)});\r\n        },\r\n      \r\n    \r\n\r\n\r\n}\r\n});\r\n\r\nexport const {addtocart, remove, incrementQuantity,decrementQuantity,gettotal} = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer\r\n\r\n\r\n\r\n \r\n\r\n"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAE5C,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAE;EAElCE,IAAI,EAAC,MAAM;EACXC,YAAY,EAAG;IAEfC,OAAO,EAAC;EAEX,CAAC;EACFC,QAAQ,EAAC;IACLC,SAAS,EAAC,CAACC,KAAK,WAAc;MAAA,IAAZ;QAACC;MAAO,CAAC;MACzB,MAAMC,UAAU,GAAGF,KAAK,CAACH,OAAO,CAACM,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;MACvE,IAAIH,UAAU,EAAE;QACdA,UAAU,CAACI,QAAQ,EAAE;MACvB,CAAC,MAAM;QACLN,KAAK,CAACH,OAAO,CAACU,IAAI,CAAC;UAAE,GAAGN,OAAO;UAAEK,QAAQ,EAAE,CAAC;UAACE,KAAK,EAAC;QAAE,CAAC,CAAC;MACzD;IACF,CAAC;IACDC,MAAM,EAAC,CAACT,KAAK,YAAe;MAAA,IAAb;QAACC;MAAO,CAAC;MACtB,MAAMS,UAAU,GAAGV,KAAK,CAACH,OAAO,CAACc,MAAM,CAAEP,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;MACzEL,KAAK,CAACH,OAAO,GAAGa,UAAU;IAC1B,CAAC;IACDE,iBAAiB,EAAE,CAACZ,KAAK,YAAgB;MAAA,IAAf;QAACC;MAAO,CAAC;MACjC,MAAMG,IAAI,GAAGJ,KAAK,CAACH,OAAO,CAACM,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;MACjED,IAAI,CAACE,QAAQ,EAAE;IAEjB,CAAC;IACDO,iBAAiB,EAAE,CAACb,KAAK,YAAgB;MAAA,IAAd;QAACC;MAAO,CAAC;MAClC,MAAMG,IAAI,GAAGJ,KAAK,CAACH,OAAO,CAACM,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;MACjE,IAAID,IAAI,CAACE,QAAQ,KAAK,CAAC,EAAE;QACvBF,IAAI,CAACE,QAAQ,GAAG,CAAC;MACnB,CAAC,MAAM;QACLF,IAAI,CAACE,QAAQ,EAAE;MACjB;IACF,CAAC;IACDQ,QAAQ,EAAC,CAACd,KAAK,YAAe;MAAA,IAAd;QAACC;MAAO,CAAC;MACvB,MAAMG,IAAI,GAAGJ,KAAK,CAACH,OAAO,CAACM,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;MAChED,IAAI,CAACW,MAAM,CAAC,SAASC,MAAM,CAACR,KAAK,EAAES,GAAG,EAAE;QACvC,OAAQT,KAAK,GAAIS,GAAG,CAACX,QAAQ,GAACW,GAAG,CAACpB,OAAO,CAACqB,KAAM;MAAA,CAAC,CAAC;IACpD;EAKR;AACA,CAAC,CAAC;AAEF,OAAO,MAAM;EAACnB,SAAS;EAAEU,MAAM;EAAEG,iBAAiB;EAACC,iBAAiB;EAACC;AAAQ,CAAC,GAAGpB,SAAS,CAACyB,OAAO;AAElG,eAAezB,SAAS,CAAC0B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}